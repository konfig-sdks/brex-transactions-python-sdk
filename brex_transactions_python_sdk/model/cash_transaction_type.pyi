# coding: utf-8

"""
    Transactions API

     The transactions API lets you view your transactions, accounts, and statements. 

    The version of the OpenAPI document: 1.0
    Contact: developer-access@brex.com
    Created by: https://brex.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from brex_transactions_python_sdk import schemas  # noqa: F401


class CashTransactionType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """
    
    @schemas.classproperty
    def PAYMENT(cls):
        return cls("PAYMENT")
    
    @schemas.classproperty
    def DIVIDEND(cls):
        return cls("DIVIDEND")
    
    @schemas.classproperty
    def FEE(cls):
        return cls("FEE")
    
    @schemas.classproperty
    def ADJUSTMENT(cls):
        return cls("ADJUSTMENT")
    
    @schemas.classproperty
    def INTEREST(cls):
        return cls("INTEREST")
    
    @schemas.classproperty
    def CARD_COLLECTION(cls):
        return cls("CARD_COLLECTION")
    
    @schemas.classproperty
    def REWARDS_REDEMPTION(cls):
        return cls("REWARDS_REDEMPTION")
    
    @schemas.classproperty
    def RECEIVABLES_OFFERS_ADVANCE(cls):
        return cls("RECEIVABLES_OFFERS_ADVANCE")
    
    @schemas.classproperty
    def FBO_TRANSFER(cls):
        return cls("FBO_TRANSFER")
    
    @schemas.classproperty
    def RECEIVABLES_OFFERS_REPAYMENT(cls):
        return cls("RECEIVABLES_OFFERS_REPAYMENT")
    
    @schemas.classproperty
    def RECEIVABLES_OFFERS_COLLECTION(cls):
        return cls("RECEIVABLES_OFFERS_COLLECTION")
    
    @schemas.classproperty
    def BREX_OPERATIONAL_TRANSFER(cls):
        return cls("BREX_OPERATIONAL_TRANSFER")
    
    @schemas.classproperty
    def INTRA_CUSTOMER_ACCOUNT_BOOK_TRANSFER(cls):
        return cls("INTRA_CUSTOMER_ACCOUNT_BOOK_TRANSFER")
    
    @schemas.classproperty
    def BOOK_TRANSFER(cls):
        return cls("BOOK_TRANSFER")
    
    @schemas.classproperty
    def CRYPTO_BRIDGE(cls):
        return cls("CRYPTO_BRIDGE")
